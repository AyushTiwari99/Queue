public class CQUEUE
{
    int arr[];
    int front;
    int rear;
    CQUEUE(int size)
    {
        arr= new int[size];
        front = rear =-1;
    }
    public boolean isEmpty()
    {
        if(front == -1 && rear ==-1)
            return true;
        else return false;
    }
    public boolean isFull()
    {
        if(front == 0 && rear == arr.length-1) return true;
        else if(front == rear+1) return true;
        else return false;
    }
    public void enqueue(int data){
        if(isEmpty()){
            front++;
            rear++;
            arr[rear] = data;
        }
        else if(isFull()){
            System.out.println("OVERFLOW");
        }
        else {
            if(rear == arr.length-1){
                rear = 0;
                arr[rear] = data;
            }
            else {
                rear++;
                arr[rear] = data;
            }
        }
    }
    public void dequeue(){
        arr[front] =0;
        if(isEmpty()) System.out.println("UNDERFLOW");
        else if(front == rear) front = rear = -1;
        else if(front == rear+1) front = 0;
        else front++;
    }
    public void display(){
        if(isEmpty()) System.out.println("EMPTY");
        else {
            if(front<rear){
                for(int i= front; i<=rear; i++)
                    System.out.println(arr[i]);
            }
            else {
                for(int i=front; i<arr.length; i++) System.out.println(arr[i]);
                for(int i=0; i<=rear; i++) System.out.println(arr[i]);
            }
        }
    }

    public static void main(String[] args) {
        CQUEUE obj = new CQUEUE(5);
        obj.enqueue(1);
        obj.enqueue(2);
        obj.enqueue(3);
        obj.enqueue(4);
        obj.enqueue(5);
        obj.dequeue();
        obj.dequeue();
        obj.enqueue(100);
        obj.enqueue(200);
        obj.display();
    }
}
